name: Build libgit2

on: push

jobs:
    build:
        name: Build libgit2 for ${{ matrix.platform }}
        strategy:
            matrix:
                platform: [ubuntu-latest, macos-latest, windows-latest]
        runs-on: ${{ matrix.platform }}
        steps:
            - name: Checkout
              uses: actions/checkout@v1
              with:
                  submodules: true
                  fetch-depth: 1
            - name: Build libgit2
              run: |
                pushd vendor/libgit2 &&
                mkdir -p install/lib &&
                mkdir -p build &&
                pushd build &&
                cmake -DTHREADSAFE=ON \
                  -DBUILD_CLAR=OFF \
                  -DBUILD_SHARED_LIBS=OFF \
                  -DCMAKE_C_FLAGS=-fPIC \
                  -DUSE_SSH=OFF \
                  -DCURL=OFF \
                  -DUSE_HTTPS=OFF \
                  -DUSE_BUNDLED_ZLIB=ON \
                  -DUSE_EXT_HTTP_PARSER=OFF \
                  -DCMAKE_BUILD_TYPE="RelWithDebInfo" \
                  -DCMAKE_INSTALL_PREFIX=../install \
                  -DWINHTTP=OFF \
                  -G "Unix Makefiles" \
                  .. && \
                cmake --build . &&
                popd && popd
            - name: Move artifacts into place (Ubuntu)
              if:  matrix.platform == 'ubuntu-latest'
              run: |
                mkdir -p ./libgit2-static/linux &&
                mv vendor/libgit2/build/libgit2.* ./libgit2-static/linux
            - name: Move artifacts into place (MacOS)
              if:  matrix.platform == 'macos-latest'
              run: |
                mkdir -p ./libgit2-static/darwin &&
                mv vendor/libgit2/build/libgit2.* ./libgit2-static/darwin
            - name: Move artifacts into place (Windows)
              if:  matrix.platform == 'windows-latest'
              run: |
                mkdir -p ./libgit2-static/linux &&
                mv vendor/libgit2/build/libgit2.* ./libgit2-static/windows
            # - name: Install Python3 setup tools
            #   if:  matrix.platform == 'ubuntu-latest'
            #   run: sudo apt-get install python3-setuptools
            # - name: Create PR
            #   run: |
            #       pip3 install --requirement ./.github/scripts/requirements.txt
            #       ./.github/scripts/create-pull-request.py
            #   env:
            #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #     PULL_REQUEST_BRANCH: static-builds
            #     COMMIT_MESSAGE: Update libgit2 static library for ${{ matrix.platform }}
            #     PULL_REQUEST_TITLE: libgit2 static library for ${{ matrix.platform }}
            #     PULL_REQUEST_BODY: Auto-generated pull request to build libgit2 for ${{ matrix.platform }}
            - uses: EndBug/add-and-commit@v4 # You can change this to use a specific version
              with:
                # The arguments for the `git add` command (see the paragraph below for more info)
                # Default: '.'
                add: './libgit2-static'
                author_name: Bryn bellomy
                author_email: bryn.bellomy@gmail.com

                # The local path to the directory where your repository is located. You should use actions/checkout first to set it up
                # Default: '.'
                # cwd: './path/to/the/repo'

                # Whether to use the --force option on `git add`, in order to bypass eventual gitignores
                # Default: false
                # force: true

                # The message for the commit
                # Default: 'Commit from GitHub Actions'
                message: Update static library for ${{ matrix.platform }}

                # Name of the branch to use, if different from the one that triggered the workflow
                # Default: the branch that triggered the workflow (from GITHUB_REF)
                ref: 'static-builds'

                # The arguments for the `git rm` command (see the paragraph below for more info)
                # Default: ''
                # remove: "./dir/old_file.js"

                # Name of the tag to add to the new commit (see the paragraph below for more info)
                # Default: ''
                # tag: "v1.0.0"

              env:
                # This is necessary in order to push a commit to the repo
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged




